openapi: '3.0.0'
servers:
  - url: /v1.0
info:
  title: Hello World
  description: API Description
  version: '1.0'
paths:
  /users:
    get:
      tags:
        - Users
      summary: Get users
      description: Returns the list of all users from the DB
      operationId: api.user.get_users
      responses:
        '200':
          description: List of users
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
    post:
      tags:
        - Users
      summary: Post user
      description: Add a new users to the DB
      operationId: api.user.post_user
      requestBody:
        description: New user
        content:
          application/json:
            schema:
              x-body-name: user
              $ref: '#/components/schemas/User'
      responses:
        '201':
          description: User created
  /users/{id}:
    get:
      tags:
        - Users
      summary: Get user
      description: Returns a specific user from the DB
      operationId: api.user.get_user
      parameters:
        - $ref: '#/components/parameters/user_id'
      responses:
        '200':
          description: User found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: User not found
    delete:
      tags:
        - Users
      summary: Delete user
      description: Deletes a specific user from the DB
      operationId: api.user.delete_user
      parameters:
        - $ref: '#/components/parameters/user_id'
      responses:
        '204':
          description: User deleted
        '404':
          description: User not found
    put:
      tags:
        - Users
      summary: Put user
      description: Adds or updates a specific user from the DB
      operationId: api.user.put_user
      parameters:
        - $ref: '#/components/parameters/user_id'
      requestBody:
        description: New user
        content:
          application/json:
            schema:
              x-body-name: user
              $ref: '#/components/schemas/User'
      responses:
        '200':
          description: User updated
        '201':
          description: User created
components:
  parameters:
    user_id:
      name: id
      description: Pet's Unique identifier
      in: path
      required: true
      schema:
        type: string
  schemas:
    User:
      type: object
      required:
        - first_name
        - last_name
      properties:
        id:
          type: number
          description: Unique identifier
          example: 1
          readOnly: true
        first_name:
          type: string
          description: User's first_name
          example: Susie
        last_name:
          type: string
          description: User's last_name
          example: Osborne